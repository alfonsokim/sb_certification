<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<modify version="7.2.7">
    <add generator="gui">
        <implements module-reference="AlgoInterface.sbint"/>
        <import from="AlgoInterface.sbint" postfix="" prefix=""/>
        <import alias="ExecutionRequestSchema" from="SharedSchemas.sbapp" item="ExecutionRequestSchema"/>
        <import alias="QuoteSchema" from="SharedSchemas.sbapp" item="QuoteSchema"/>
        <constant expr="50" name="NumberShares"/>
        <constant expr="&quot;Williams&quot;" name="TraderName"/>
        <parameter-definitions>
            <parameter default="20" name="WINDOW_SIZE"/>
        </parameter-definitions>
        <stream name="QuoteInput" schema="QuoteSchema">
        </stream>
        <box name="SlidingWindow" type="aggregate">
            <input port="1" stream="QuoteInput"/>
            <output port="1" stream="out:SlidingWindow_1"/>
            <param name="dimension-name.0" value="TupleDimension"/>
            <param name="dimension-type.0" value="tuple"/>
            <param name="dimension-advance.0" value="1"/>
            <param name="dimension-partial.0" value="no"/>
            <param name="dimension-size.0" value="${WINDOW_SIZE}"/>
            <param name="output-group-by" value="true"/>
            <target-list>
                <expressions>
                    <include field="Max">max(Price)</include>
                    <include field="Min">min(Price)</include>
                    <include field="Last">lastval(Price)</include>
                    <include field="Time">lastval(Time)</include>
                </expressions>
            </target-list>
            <param name="group-by-name.0" value="Symbol"/>
            <param name="group-by.0" value="Symbol"/>
        </box>
        <box name="ComputePercentR" type="map">
            <input port="1" stream="out:SlidingWindow_1"/>
            <output port="1" stream="out:ComputePercentR_1"/>
            <target-list>
                <item name="input" selection="all"/>
                <expressions>
                    <include field="PercentR">if (Max - Min) &gt; 0 then ( 100 * ((Max-Last) / (Max-Min)) ) else if (Max - Min) == 0 then ( 100 ) else throw("Max - Min &gt; 0")</include>
                </expressions>
            </target-list>
        </box>
        <box name="SignalPosition" type="map">
            <input port="1" stream="out:ComputePercentR_1"/>
            <output port="1" stream="out:SignalPosition_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="Symbol">Symbol</include>
                    <include field="TradePrice">Last</include>
                    <include field="Time">Time</include>
                    <include field="Position">if PercentR &gt;= 80 then "Long" else if PercentR &lt;= 20 then "Short" else "None"</include>
                </expressions>
            </target-list>
        </box>
        <box name="FilterSignal" type="filter">
            <input port="1" stream="out:SignalPosition_1"/>
            <output port="1" stream="out:FilterSignal_1"/>
            <param name="autogen-nomatch-port" value="false"/>
            <param name="expression.0" value="Position == &quot;Long&quot; or Position == &quot;Short&quot;"/>
        </box>
        <box name="FixSchema" type="map">
            <input port="1" stream="out:FilterSignal_1"/>
            <output port="1" stream="ExecutionRequestOutput"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="Symbol">input1.Symbol</include>
                    <include field="Price">input1.TradePrice</include>
                    <include field="Quantity">NumberShares</include>
                    <include field="Time">input1.Time</include>
                    <include field="Position">input1.Position</include>
                    <include field="TraderName">TraderName</include>
                </expressions>
            </target-list>
        </box>
        <output-stream name="ExecutionRequestOutput" schema="ExecutionRequestSchema">
        </output-stream>
    </add>
</modify>
